** 조건문 **

1. 제어문
        프로그램의 흐름을 개발자가 원하는 방식으로 조정하기 위해 사용하는 구문이다.
        (1) 조건문 : if , else if, else, switch
        (2) 반복문(기본) : for ,  while , do... while
        (3) 제어문 : break. continue


2. 조건문
        조건의 참(True) 또는 거짓(False)에 따라 코드의 실행 흐름을 제어하는데 사용된다.
        (1) if : 조건이 참일 때 실행되는 코드 / 주로 범위줄 때(ex. 점수)
        (2) else : 조건이 거짓일 때 실행되는 코드
        (3) else if : 복수(참&거짓) 조건일 때
        (4) switch : 여러 값 중 하나를 선택할 경우
                        (= 값이 하나이고 경우가 여러개일 때 유용)


3. 기본 반복문
        (1) for : (초기식, 조건식, 증감식)을 포함하여 *반복횟수가 명확*할 경우
        (2) while : 조건이 참인 동안 계속 반복된다.(반복횟수 정해져있지않음)
        (3) do...while : 최소 한번은 실행된 후 조건을 검사, 적어도 한 번 실행보장

        => 배열이나 객체와 무관하게, 반복적으로 어떤 작업을 수행할 때 사용된다.
                (= 평이한 반복문)


** 배열 **

1. 배열
        여러 개의 값을 하나의 변수에 순서대로 저장할 수 있는 자료구조, [ ] 대괄호 사용
        - method : push, pop, shift, unshift, splice , forEach, map 

2. 배열을 이용한 반복문
        (1) for .. of : index가 필요없을 때
        (2) forEach : 함수형 스타일로 배열 반복

3. 2D 배열 : 2차원 행렬(matrix)

** 함수 **
function (입력값){
        return 결과값
}

# 호이스팅 : 코드를 실행하기 전에 변수와 함수 선언을 "끌어올리는" 동작을 말한다.
                즉, 함수선언과 함수 호출은 순서가중요하지 않다.

